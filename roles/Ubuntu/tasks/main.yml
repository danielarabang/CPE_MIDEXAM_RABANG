
# ------- DEPDENCIES -------

- name: Installing dependencies
  apt:
    name:
      - apt-transport-https
      - openjdk-8-jdk
    state: latest

# -------- LOGSTASH --------

- name: Downloading in the Logstash package
  tags: logstash_ubuntu
  get_url:
    url: https://artifacts.elastic.co/downloads/logstash/logstash-8.4.3-amd64.deb
    dest: /tmp/logstash-8.4.3-amd64.deb

- name: Installing package
  tags: logstash_ubuntu
  apt:
    deb: /tmp/logstash-8.4.3-amd64.deb

- name: Reloading the daemon
  tags: logstash_ubuntu 
  command: /bin/systemctl daemon-reload

- name: Starting and enabling the service
  tags: logstash_ubuntu
  service:
    name: logstash
    state: restarted
    enabled: true


# -------- KIBANA --------

- name: Downloading in the Kibana package
  get_url:
    url: https://artifacts.elastic.co/downloads/kibana/kibana-8.4.3-amd64.deb
    dest: /tmp/kibana-8.4.3-amd64.deb

- name: Installing Kibana 
  apt:
    deb: /tmp/kibana-8.4.3-amd64.deb

- name: Reloading the daemon
  command: /bin/systemctl daemon-reload

- name: Making sure that Kibana service is started and enabled 
  service:
    name: kibana
    state: restarted
    enabled: true


# -------- ELASTICSEARCH --------

- name: Downloading in the elastic search package
  get_url:
    url: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.4.3-amd64.deb
    dest: /tmp/elasticsearch-8.4.3-amd64.deb

- name: Installing package
  apt:
    deb: /tmp/elasticsearch-8.4.3-amd64.deb

- name: Enabling elastic search service
  tags: es_ubuntu
  service:
    name: elasticsearch
    enabled: yes

- name: Modifying service file
  tags: es_ubuntu
  replace:
    path: /usr/lib/systemd/system/elasticsearch.service
    regexp: "TimeoutStartSec=75"
    replace: "TimeoutStartSec=500"

- name: Starting and enabling the deamon
  shell: |
    sudo systemctl enable elasticsearch.service
    sleep 10
    sudo systemctl start elasticsearch.service
  ignore_errors: yes


# ------- DEPENDENCIES --------
- name: Installing dependencies 
  apt:
    name:  
      - apt-transport-https
      - software-properties-common 
      - wget
    state: latest


# ------- INFLUXDB --------

- name: Adding Influxdb in the repository
  shell: |
    wget -q https://repos.influxdata.com/influxdb.key
    sleep 5
    echo '23a1c8836f0afc5ed24e0486339d7cc8f6790b83886c4c96995b88a061c5bb5d influxdb.key' | sha256sum -c && cat influxdb.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/influxdb.gpg > /dev/null
    sleep 5
    echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdb.gpg] https://repos.influxdata.com/debian stable main' | sudo tee /etc/apt/sources.list.d/influxdata.list

- name: Installing Influxdb
  apt:
    name:
      - influxdb

- name: Making sure that the Influxd is enabled and started
  service:
    name: influxdb
    state: started
    enabled: true

# ------- GRAFANA --------

- name: Adding Grafana Repo
  shell: |
    sudo wget -q -O /usr/share/keyrings/grafana.key https://packages.grafana.com/gpg.key

- name: Update repo
  shell: |
    sudo apt-get update

- name: Updating the repo and isntalling grafana
  apt:
    name:
      - grafana

- name: Reloading the daemon
  shell: |
    sudo systemctl daemon-reload

- name: Making sure that the Grafana server is started and enabled
  service:
    name: grafana-server
    state: restarted
    enabled: true


# ------- Prometheus --------

- name: Creating a directory (where the downloaded files will be stored)
  tags: directory
  file:
    path: ~/prometheus
    state: directory
  
- name: Downloading and extracting Prometheus
  tags: source
  unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v2.39.1/prometheus-2.39.1.linux-amd64.tar.gz
    dest: ~/prometheus
    remote_src: yes
    mode: 0777
    owner: root
    group: root

- name: Stopping the Prometheus service if its exist
  shell: | 
    sudo systemctl stop prometheus >> /dev/null
  ignore_errors: yes

- name: Adding the Prometheus executables to a PATH
  tags: executables
  shell: | 
    cd ~/prometheus/prometheus*
    cp -r . /usr/local/bin/prometheus

- name: Copying the Prometheus service file
  tags: servicefile
  copy:
    src: prometheus.service
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 777

- name: Making sure that Prometheus service is started and enabled
  tags: serviceon
  service:
    name: prometheus
    state: started
    enabled: true

- name: Installing depedncies
  apt:
    name:
      - apache2
      - mysql-server
      - php 
      - libapache2-mod-php 
      - php-mysql
    state: latest 

- name: Starting the services
  service:
    name: apache2
    state: started
    enabled: true

